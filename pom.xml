<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>guava-tutorial</groupId>
    <artifactId>guava-tutorial</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
            <version>4.11</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
            <version>1.3</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>external.atlassian.jgitflow</groupId>
                    <artifactId>jgitflow-maven-plugin</artifactId>
                    <version>1.0-m5.1</version>
                    <configuration>
                        <!-- Enable this to push to origin using SSH keys -->
                        <enableSshAgent>true</enableSshAgent>
                        <!-- Keep your maven submodules at the same version as the parent POM -->
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <!-- Pusing in-development features to origin allows all devs to see what each other
                          are working on -->
                        <pushFeatures>true</pushFeatures>
                        <!-- This allows the CI server (e.g. Jenkins) to automatically push new releases to
                          origin; you can then either manually deploy them or, if you are doing Continuous
                          Deployments, auto-deploy them to prod -->
                        <pushReleases>true</pushReleases>
                        <!-- Hot Fixes should be pushed to origin as well so that any dev can pick them up -->
                        <pushHotfixes>true</pushHotfixes>
                        <!-- Prevents deployments from dev workstations so that they can be done by a CI server -->
                        <!--<noDeploy>true</noDeploy>-->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>